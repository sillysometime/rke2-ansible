---
- name: Set timezone
  timezone:
    name: "{{ system_timezone }}"

- name: Update system packages (Oracle Linux/RHEL)
  yum:
    name: "*"
    state: latest
    update_cache: yes

- name: Install EPEL repository (Oracle Linux 7)
  yum:
    name: oracle-epel-release-el7
    state: present
  when: ansible_distribution == "OracleLinux" and ansible_distribution_major_version == "7"

- name: Install required packages
  yum:
    name:
      - curl
      - wget
      - tar
      - unzip
      - iptables
      - iptables-services
      - container-selinux
      - selinux-policy-base
    state: present

- name: Disable SELinux temporarily
  selinux:
    state: permissive
    policy: targeted
  register: selinux_result

- name: Reboot if SELinux state changed
  reboot:
    reboot_timeout: 300
  when: selinux_result.reboot_required

- name: Disable swap
  shell: swapoff -a
  when: disable_swap | bool

- name: Remove swap from fstab
  lineinfile:
    path: /etc/fstab
    regexp: '.*swap.*'
    state: absent
  when: disable_swap | bool

- name: Stop and disable firewalld (Oracle Linux 7 uses firewalld by default)
  systemd:
    name: firewalld
    state: stopped
    enabled: no
  ignore_errors: yes

- name: Enable and start iptables service
  systemd:
    name: iptables
    enabled: yes
    state: started
  when: configure_firewall | bool

- name: Load required kernel modules
  modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - overlay
    - br_netfilter
  ignore_errors: yes

- name: Ensure kernel modules load on boot
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter

- name: Configure sysctl for Kubernetes
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
    sysctl_file: /etc/sysctl.d/k8s.conf
  loop:
    - { key: net.bridge.bridge-nf-call-iptables, value: 1 }
    - { key: net.bridge.bridge-nf-call-ip6tables, value: 1 }
    - { key: net.ipv4.ip_forward, value: 1 }

- name: Configure iptables rules for RKE2 (Oracle Linux 7)
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ item }}"
    jump: ACCEPT
  loop:
    - "22"      # SSH
    - "6443"    # Kubernetes API
    - "9345"    # RKE2 supervisor
    - "10250"   # Kubelet
    - "2379"    # etcd client
    - "2380"    # etcd peer
  when: configure_firewall | bool
  notify: save iptables

- name: Allow Flannel UDP traffic
  iptables:
    chain: INPUT
    protocol: udp
    destination_port: "8472"
    jump: ACCEPT
  when: configure_firewall | bool
  notify: save iptables

- name: Allow traffic between cluster nodes
  iptables:
    chain: INPUT
    source: "{{ item }}"
    jump: ACCEPT
  loop:
    - "10.42.0.0/16"  # Pod CIDR
    - "10.43.0.0/16"  # Service CIDR
  when: configure_firewall | bool
  notify: save iptables